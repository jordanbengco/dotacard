@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  src: local('Open Sans'), local('OpenSans'), url(../fonts/Open-Sans.woff2) format('woff2'), url(../fonts/Open-Sans.woff) format('woff');
}
body, p, noscript {
  line-height: 28px;
  font-family: "Open Sans", "open sans",  "Droid Sans", "Lucida Sans Unicode", "Lucida Grande", 'Segoe UI', Tahoma, Verdana, Arial, Helvetica, sans-serif;
}
@font-face {
  font-family: 'Julius Sans One';
  font-style: normal;
  font-weight: 400;
  src: local('Julius Sans One'), local('JuliusSansOne-Regular'), url(../fonts/Julius-Sans-One.woff2) format('woff2'), url(../fonts/Julius-Sans-One.woff) format('woff');
}
h1, h2, .button,
.sweet-alert button,
.options span, 
.topbar *,
.choose .counter {
  font-family: "Julius Sans One", "Open Sans", "open sans",  "Droid Sans", "Lucida Sans Unicode", "Lucida Grande", 'Segoe UI', Tahoma, Verdana, Arial, Helvetica, sans-serif;
}
@font-face {
  font-family: 'Sansita One';
  font-style: normal;
  font-weight: 400;
  src: local('Sansita One'), local('SansitaOne'), url('../fonts/Sansita-One.woff2') format('woff2'), url('../fonts/Sansita-One.woff') format('woff');
}
.tutorial .battle,
.versus {
  font-family: "Sansita One", "Open Sans", "open sans",  "Droid Sans", "Lucida Sans Unicode", "Lucida Grande", Verdana, Arial, Helvetica, sans-serif;
} 

input[type="text"] {
  font-family: monospace;
}

html, body {
  user-select: none;
  /* -webkit-user-select: none; */
  margin: 0;
  width: 100%;
  height: 100%;
}
body {
  background-attachment: fixed;
  background-color: #22272c;
  background: radial-gradient(ellipse farthest-corner at center top, #6e7a66 0%, #343b43 30%, #22272c 60%, #22272c 100%), #22272c;
  background-size: 100% 20%;
  background-repeat: no-repeat;
  box-shadow: 0 -50px 100px rgba(0,0,0,0.7) inset;
  overflow: hidden;
  tap-highlight-color: rgba(0,0,0,0);
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}

p {
  cursor: default;
  word-spacing: -1px;
  padding: 1px 2px;
}

a, a:visited {
  text-decoration: none;
  color: inherit;
}

h1, h2 {
  padding: 1px 2px;
  margin: 0;
  font-weight: normal;
}
h1 {
  font-size: 22px;
  cursor: default;
}
h2 {
  font-size: 19px;
  cursor: default;
  margin: 10px 0;
}
img {
  border: 0;
}
small {
  font-size: 70%;
}
noscript {
  display: block;
}

.greenlight-button {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 56px;
  height: 75px;
  overflow: hidden;
  transition: width 0.3s;
  transform: translate(-490px, -272px);
}
.greenlight-button:hover {
  width: 442px;
}
.greenlight-button img {
  position: absolute;
  top: 17px;
}
.greenlight-button .greenlight-banner {
  top: 0;
}
.greenlight-banner,
.greenlight-button:hover img {
  opacity: 0;
}
.greenlight-button:hover .greenlight-banner {
  opacity: 1;
}

.game-container {
  position: absolute;
  width: 970px;
  height: 600px;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
  color: #fff;
  background: url("../img/banner.jpg");
  background-size: 111%;
  background-position: 50%;
}

.states {
  overflow: hidden;
}

.states.iddle {
  animation: persp 30s infinite;
}
@keyframes persp {
  0%, 100% { perspective-origin: 50% 55%; }
  25% { perspective-origin: 55% 50%; }
  50% { perspective-origin: 50% 45%; }
  75% { perspective-origin: 45% 50%; }  
}

.hidden {
  display: none;
}

.box {
  position: absolute;
  box-sizing: border-box;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -48%);
  padding: 40px 80px;
  text-align: center;
  border-radius: 5px;
  background: rgba(0,0,0,0.5);
}

.box div p {
  display: block;
}
.log .h1 {
  z-index: 10;
  position: absolute;
  top: 50%;
  left: 50%;
  animation: logoslideup 0.8s 1;
  transform: translate(-50%, -105%);
}
@keyframes logoslideup {
  0% {transform: translate(-50%, -80%); }
  100% {transform: translate(-50%, -105%);}
}
.log .h2 {
  z-index: 10;
  margin: 16px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, 0);
}
.log .h2 {
  animation: slideright 5s infinite;
}
@keyframes slideright {
  0% {transform: translate(-150%, 0);}
  5%, 95% {transform: translate(-50%, 0);}
  100% {transform: translate(250%, 0);}
}

.loading .box {
  width: 230px;
  top: 92%;
  padding: 0;
}

.notfound .box {
  width: 500px;
  top: 92%;
  padding: 5px;
}

.notfound .box p {
  margin: 0;
}

.box .loadtext {
  margin-left: 0.5em;
}

.loadtext .message {
  margin-left: 8px;
}

.loadtext .message,
.loadtext .progress {
  line-height: 22px;
}

.states.finished {
  background-image: url("../img/bkg/polygon-light.jpg");
  perspective: 600px;
}

.states.library,
.states.online,
.states.tutorial {
  background-image: url("../img/bkg/polygon-dark.jpg");
}

.states, .state {
  background-size: cover;
  width: 970px;
  height: 600px;
  position: absolute;
  top: 0;
  left: 0;
}

.state p {
  display: block;
  margin: 1em;
}

input {
  border-radius: 3px;
  letter-spacing: -1px;
  word-spacing: -1px;
  font-size: 17px;
  color: #4d4843;
  outline: 0;
  border: 0;
  padding: 5px;
  margin: 1px;
  height: 22px;
  transform: translateZ(0);
}
input:focus {
  animation: shade 0.5s;
}
@keyframes shade {
  50% {opacity: 0.5;}
}
.button, 
button, 
input[type=button], 
input[type=submit] {
  display: inline-block;
  text-align: center;
  font-size: 16px;
  cursor: pointer;
  padding: 8px 12px;
  border: 0;
  border-radius: 3px;
  margin: 6px;
  outline: 0;
  background: #9dada4;
  color: white;
  text-shadow: 0 1px 0 #888;
  box-shadow: 0 4px 0 #888;
  position: relative;
  top: -3px;
  transition: all 0.2s;
  /* cursor: url("../img/cursor/cursor.png"), url("../img/cursor/cursor.cur"), pointer; */
  transform: translateZ(0);
  min-width: 75px;
}
.button:hover, 
button:hover,
input[type=button]:hover, 
input[type=submit]:hover {
  background: #aab2a3;
  z-index: 20;
}
.button:active, 
button:active,
input[type=button]:active, 
input[type=submit]:active {
  top: 0;
  box-shadow: 0 1px 0 #9b9c89;
}
.button[disabled], 
button[disabled],
input[type=button][disabled], 
input[type=submit][disabled] {
  background: darkgray;
  color: gray;
  text-shadow: none;
  box-shadow: 0 4px 0 gray;
}
.button[disabled]:hover,
button[disabled]:hover,
input[type=button][disabled]:hover, 
input[type=submit][disabled]:hover {
  cursor: default;
  background: darkgray;
  z-index: 0;
}
.button[disabled]:active,
button[disabled]:active,
input[type=button][disabled]:active, 
input[type=submit][disabled]:active {
  top: -3px;
}
.buttonbox .button {
  display: block;
  margin-bottom: 12px;
}
input[type="checkbox"],
input[type="radio"] {
  cursor: pointer;
}

label {
  display: block;
  padding: 1px 2px;
  margin: 2px;
  text-align: left;
  height: 28px;
}
label input {
  margin: 0 5px;
}

label span {
  vertical-align: super;
}

.log .box {
  padding: 360px 110px 30px;
  width: 590px;
}

.log form {
  margin-top: 1px;
}

.log input[type=submit] {
  height: 40px;
}

.log label {
  text-align: center;
}

.log .remembername {
  cursor: pointer;
}
.bkgdeck {
  position: absolute;
  top: 0;
  left: 0;
  width: 970px;
  height: 600px;
  pointer-events: none;
}
.tutorial .bkgdeck,
.online .bkgdeck,
.library .bkgdeck {
  display: none;
}
.bkgdeck .card {
  position: absolute;
  cursor: default;
  z-index: 0;
}
.bkgdeck .card:hover {
  z-index: 1;
}
.bkgdeck .ld {
  transform: translate3d(800px, -45px, -50px) rotateY(-60deg) rotateZ(32deg) rotateX(-15deg);
}
.bkgdeck .wk {
  transform: translate3d(740px, -130px, -260px) rotateY(-50deg) rotateZ(30deg) rotateX(-15deg);
}
.bkgdeck .cm {
  transform: translate3d(960px, 130px, -160px) rotateY(-90deg) rotateZ(35deg) rotateX(-5deg);
}
.bkgdeck .pud {
  transform: translate(-120px, -60px) translateZ(-140px) rotateY(50deg) rotateZ(-36deg) rotateX(-2deg);
}
.bkgdeck .am {
  transform: translate(-310px, 130px) translateZ(-290px) rotateY(70deg) rotateZ(-35deg) rotateX(5deg);
}
.bkgdeck .kotl {
  transform: translate(-66px, -130px) translateZ(-323px) rotateY(40deg) rotateZ(-39deg) rotateX(-18deg);
}
.menu h1 {
  margin-bottom: 6px;
}

.menu .box {
  width: 450px;
  height: 450px;
}
.menu .box .button {
  width: 216px;
}

.deck {
  transition: all 0.4s;
}

/*BUFFS*/

.buffs .buff.stun .img {
   background-image: url("../img/skills/stun.jpg");
}

.silence .img {
   background-image: url("../img/skills/silence.jpg");
}
.magicimmune .img {
   background-image: url("../img/skills/magicimmune.jpg");
}
.ethereal .img {
   background-image: url("../img/skills/ethereal.jpg")
}

.shake {
  position: relative;
  animation: shake 0.1s infinite linear;
}
@keyframes shake {
  0% {transform: translateX(2px);}
  50% {transform: translateX(-2px);}
}

.card.shake {
  animation: cardshake 0.1s infinite linear;
}
@keyframes cardshake {
  0% {left: calc(50% + 8px);}
  50% {left: calc(50% - 8px);}
}
